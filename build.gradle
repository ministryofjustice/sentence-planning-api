plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'java'
    id 'checkstyle'
    id "com.github.spotbugs" version "2.0.0"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.owasp.dependencycheck' version '5.2.4'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'jacoco'

group = 'uk.gov.justice.digital'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

spotbugs {
    ignoreFailures = true
    effort = 'min'
    showProgress = true
    reportLevel = 'low'
}

checkstyle {
    configFile = new File(rootDir, 'config/checkstyle/checkstyle.xml')
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
}

dependencyCheck {
    cveValidForHours=4
    suppressionFiles = ['dependency-check-suppress-spring.xml']
    format = 'ALL'
    analyzers {
        assemblyEnabled = false
    }
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test.finalizedBy jacocoTestReport


def applicationName = 'sentence-planning-api'
def today = java.time.Instant.now()
def todayDate = java.time.LocalDate.now()
def formatter = java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd")
version todayDate.format(formatter)

jar {
    baseName = applicationName
    manifest {
        attributes 'Implementation-Title': applicationName,
                'Implementation-Version': System.getenv('CI') ? "${version}.${System.getenv('CIRCLE_BUILD_NUM')}" : version
    }
}

springBoot {
    buildInfo {
        properties {
            artifact = rootProject.name
            version = System.getenv('CI') ? "${version}.${System.getenv('CIRCLE_BUILD_NUM')}" : version
            group = 'uk.gov.justice.digital'
            name = rootProject.name
            time = today
            additional = [
                    by                   : System.properties['user.name'],
                    operatingSystem      : "${System.properties['os.name']} (${System.properties['os.version']})",
                    continuousIntegration: System.getenv('CI') ? true : false,
                    machine              : InetAddress.localHost.hostName
            ]
        }
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.4.0.RELEASE'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation("net.logstash.logback:logstash-logback-encoder:5.3")
    implementation 'com.vladmihalcea:hibernate-types-52:2.4.4'
    implementation("io.jsonwebtoken:jjwt:0.9.1")
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.hibernate:hibernate-envers'
    compile group: 'org.springframework.data', name: 'spring-data-envers', version: '2.2.3.RELEASE'
    compile 'org.javassist:javassist:3.23.1-GA'
    compile 'com.sun.xml.bind:jaxb-impl:2.3.0'
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
    implementation 'com.vladmihalcea:hibernate-types-52:2.8.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.hibernate:hibernate-envers:5.4.10.Final'
    compile 'org.javassist:javassist:3.26.0-GA'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('org.assertj:assertj-core')
}
